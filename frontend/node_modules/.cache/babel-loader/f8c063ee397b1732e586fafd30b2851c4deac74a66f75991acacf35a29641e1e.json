{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dat\\\\Desktop\\\\house-hold-goods\\\\frontend\\\\src\\\\components\\\\contexts\\\\FavoriteContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../contexts/AuthContext'; // Giả sử AuthContext chứa thông tin người dùng\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FavoriteContext = /*#__PURE__*/createContext();\nexport const FavoriteProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext); // Lấy thông tin người dùng từ AuthContext\n  const [favorites, setFavorites] = useState([]);\n\n  // Hàm tải danh sách yêu thích từ API hoặc localStorage\n  const loadFavorites = async () => {\n    if (user) {\n      try {\n        const response = await axios.get(`http://localhost:3000/favorites/${user.user_id}`);\n        setFavorites(response.data);\n      } catch (error) {\n        console.error(\"Error loading favorites from API:\", error);\n      }\n    } else {\n      const savedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n      setFavorites(savedFavorites);\n    }\n  };\n  useEffect(() => {\n    loadFavorites();\n  }, [user]);\n\n  // Cập nhật localStorage mỗi khi favorites thay đổi nếu không có user\n  useEffect(() => {\n    if (!user) {\n      localStorage.setItem('favorites', JSON.stringify(favorites));\n    }\n  }, [favorites, user]);\n  const addToFavorites = async product_id => {\n    if (!favorites.includes(product_id)) {\n      const newFavorites = [...favorites, product_id];\n      setFavorites(newFavorites);\n      if (user) {\n        try {\n          await axios.post('http://localhost:3000/favorites', {\n            userId: user.user_id,\n            product_id\n          });\n        } catch (error) {\n          console.error(\"Error adding favorite to API:\", error);\n        }\n      } else {\n        localStorage.setItem('favorites', JSON.stringify(newFavorites));\n      }\n    }\n  };\n  const removeFromFavorites = async product_id => {\n    const newFavorites = favorites.filter(item => item !== product_id);\n    setFavorites(newFavorites);\n    if (user) {\n      try {\n        await axios.delete(`http://localhost:3000/favorites/${user.user_id}/${product_id}`);\n      } catch (error) {\n        console.error(\"Error removing favorite from API:\", error);\n      }\n    } else {\n      localStorage.setItem('favorites', JSON.stringify(newFavorites));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FavoriteContext.Provider, {\n    value: {\n      favorites,\n      addToFavorites,\n      removeFromFavorites\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(FavoriteProvider, \"3tIyz9pT/rNaI2UkbXHZBXe0gjE=\");\n_c = FavoriteProvider;\nvar _c;\n$RefreshReg$(_c, \"FavoriteProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","AuthContext","jsxDEV","_jsxDEV","FavoriteContext","FavoriteProvider","children","_s","user","favorites","setFavorites","loadFavorites","response","get","user_id","data","error","console","savedFavorites","JSON","parse","localStorage","getItem","setItem","stringify","addToFavorites","product_id","includes","newFavorites","post","userId","removeFromFavorites","filter","item","delete","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dat/Desktop/house-hold-goods/frontend/src/components/contexts/FavoriteContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../contexts/AuthContext'; // Giả sử AuthContext chứa thông tin người dùng\r\n\r\nexport const FavoriteContext = createContext();\r\n\r\nexport const FavoriteProvider = ({ children }) => {\r\n    const { user } = useContext(AuthContext); // Lấy thông tin người dùng từ AuthContext\r\n    const [favorites, setFavorites] = useState([]);\r\n\r\n    // Hàm tải danh sách yêu thích từ API hoặc localStorage\r\n    const loadFavorites = async () => {\r\n        if (user) {\r\n            try {\r\n                const response = await axios.get(`http://localhost:3000/favorites/${user.user_id}`);\r\n                setFavorites(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error loading favorites from API:\", error);\r\n            }\r\n        } else {\r\n            const savedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n            setFavorites(savedFavorites);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadFavorites();\r\n    }, [user]);\r\n\r\n    // Cập nhật localStorage mỗi khi favorites thay đổi nếu không có user\r\n    useEffect(() => {\r\n        if (!user) {\r\n            localStorage.setItem('favorites', JSON.stringify(favorites));\r\n        }\r\n    }, [favorites, user]);\r\n\r\n    const addToFavorites = async (product_id) => {\r\n        if (!favorites.includes(product_id)) {\r\n            const newFavorites = [...favorites, product_id];\r\n            setFavorites(newFavorites);\r\n\r\n            if (user) {\r\n                try {\r\n                    await axios.post('http://localhost:3000/favorites', {\r\n                        userId: user.user_id,\r\n                        product_id\r\n                    });\r\n                } catch (error) {\r\n                    console.error(\"Error adding favorite to API:\", error);\r\n                }\r\n            } else {\r\n                localStorage.setItem('favorites', JSON.stringify(newFavorites));\r\n            }\r\n        }\r\n    };\r\n\r\n    const removeFromFavorites = async (product_id) => {\r\n        const newFavorites = favorites.filter(item => item !== product_id);\r\n        setFavorites(newFavorites);\r\n\r\n        if (user) {\r\n            try {\r\n                await axios.delete(`http://localhost:3000/favorites/${user.user_id}/${product_id}`);\r\n            } catch (error) {\r\n                console.error(\"Error removing favorite from API:\", error);\r\n            }\r\n        } else {\r\n            localStorage.setItem('favorites', JSON.stringify(newFavorites));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FavoriteContext.Provider value={{ favorites, addToFavorites, removeFromFavorites }}>\r\n            {children}\r\n        </FavoriteContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}