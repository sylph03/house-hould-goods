{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dat\\\\Desktop\\\\house-hold-goods\\\\frontend\\\\src\\\\components\\\\contexts\\\\FavoriteContext.js\",\n  _s = $RefreshSig$();\n// FavoriteContext.js\nimport axios from 'axios';\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FavoriteContext = /*#__PURE__*/createContext();\nexport const FavoriteProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [favorites, setFavorites] = useState([]);\n  // console.log(user);\n\n  // Tải danh sách yêu thích khi component mount\n  useEffect(() => {\n    const getFavorites = async () => {\n      if (user) {\n        try {\n          const favoritesProduct = await axios.get(`http://localhost:3000/favorites/${user.user_id}`);\n          setFavorites(favoritesProduct.data);\n        } catch (error) {\n          console.error(\"Error get favorites from API:\", error);\n        }\n      } else {\n        const savedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n        setFavorites(savedFavorites);\n        console.log(localStorage.getItem('favorites'));\n      }\n    };\n    getFavorites(); // Gọi hàm để lấy dữ liệu từ localStorage\n  }, [user]);\n\n  // Thêm sản phẩm vào danh sách yêu thích\n  const addToFavorites = async product_id => {\n    if (user) {\n      try {\n        const response = await axios.post('http://localhost:3000/favorites', {\n          user_id: user.user_id,\n          product_id\n        });\n      } catch (error) {\n        if (error.response) {\n          console.error(error.response.data.message);\n        }\n      }\n    } else {\n      if (!favorites.some(item => item.product_id === product_id)) {\n        const newFavorites = [...favorites, {\n          product_id\n        }];\n        setFavorites(newFavorites);\n        try {\n          localStorage.setItem('favorites', JSON.stringify(newFavorites));\n          console.log(localStorage.getItem('favorites'));\n        } catch (error) {\n          console.error('Lỗi khi lưu favorites vào localStorage:', error);\n        }\n      }\n    }\n  };\n\n  // Xóa sản phẩm khỏi danh sách yêu thích\n  const removeFavorites = async product_id => {\n    if (user) {\n      try {\n        const response = await axios.delete(`http://localhost:3000/favorites/${user.user_id}/${product_id}`);\n      } catch (error) {\n        if (error.response) {\n          console.error(error.response.data.message);\n        }\n      }\n    } else {\n      const newFavorites = favorites.filter(item => item.product_id !== product_id);\n      setFavorites(newFavorites);\n      localStorage.setItem('favorites', JSON.stringify(newFavorites));\n      console.log(localStorage.getItem('favorites'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FavoriteContext.Provider, {\n    value: {\n      favorites,\n      addToFavorites,\n      removeFavorites\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(FavoriteProvider, \"xk7RD7/NtBLCvf9l7x+5Liyi9HE=\");\n_c = FavoriteProvider;\nvar _c;\n$RefreshReg$(_c, \"FavoriteProvider\");","map":{"version":3,"names":["axios","React","createContext","useState","useEffect","useContext","AuthContext","jsxDEV","_jsxDEV","FavoriteContext","FavoriteProvider","children","_s","user","favorites","setFavorites","getFavorites","favoritesProduct","get","user_id","data","error","console","savedFavorites","JSON","parse","localStorage","getItem","log","addToFavorites","product_id","response","post","message","some","item","newFavorites","setItem","stringify","removeFavorites","delete","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dat/Desktop/house-hold-goods/frontend/src/components/contexts/FavoriteContext.js"],"sourcesContent":["// FavoriteContext.js\r\nimport axios from 'axios';\r\nimport React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\nexport const FavoriteContext = createContext();\r\n\r\nexport const FavoriteProvider = ({ children }) => {\r\n    \r\n    const { user } = useContext(AuthContext);\r\n\r\n    const [favorites, setFavorites] = useState([]);\r\n    // console.log(user);\r\n\r\n    // Tải danh sách yêu thích khi component mount\r\n    useEffect(() => {\r\n        const getFavorites = async () => {\r\n            if (user) {\r\n                try {\r\n                    const favoritesProduct = await axios.get(`http://localhost:3000/favorites/${user.user_id}`);\r\n                    setFavorites(favoritesProduct.data);\r\n                } catch (error) {\r\n                    console.error(\"Error get favorites from API:\", error);\r\n                }\r\n            } else {\r\n                const savedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n                setFavorites(savedFavorites);\r\n                console.log(localStorage.getItem('favorites'));\r\n            }\r\n        };\r\n\r\n        getFavorites();  // Gọi hàm để lấy dữ liệu từ localStorage\r\n    }, [user]);\r\n\r\n    // Thêm sản phẩm vào danh sách yêu thích\r\n    const addToFavorites = async (product_id) => {\r\n        if (user) {\r\n            try {\r\n                const response = await axios.post('http://localhost:3000/favorites', {user_id : user.user_id, product_id})\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    console.error(error.response.data.message);\r\n                }\r\n            }\r\n        } else {\r\n            if (!favorites.some(item => item.product_id === product_id)) {\r\n                const newFavorites = [...favorites, { product_id }];\r\n                setFavorites(newFavorites);\r\n                try {\r\n                    localStorage.setItem('favorites', JSON.stringify(newFavorites));\r\n                    console.log(localStorage.getItem('favorites'));\r\n                } catch (error) {\r\n                    console.error('Lỗi khi lưu favorites vào localStorage:', error);\r\n                }\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    // Xóa sản phẩm khỏi danh sách yêu thích\r\n    const removeFavorites = async (product_id) => {\r\n        if (user) {\r\n            try {\r\n                const response = await axios.delete(`http://localhost:3000/favorites/${user.user_id}/${product_id}`);\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    console.error(error.response.data.message);\r\n                }\r\n            }\r\n        } else {\r\n            const newFavorites = favorites.filter(item => item.product_id  !== product_id);\r\n            setFavorites(newFavorites);\r\n            localStorage.setItem('favorites', JSON.stringify(newFavorites));\r\n            console.log(localStorage.getItem('favorites'));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FavoriteContext.Provider value={{ favorites, addToFavorites, removeFavorites }}>\r\n            {children}\r\n        </FavoriteContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}