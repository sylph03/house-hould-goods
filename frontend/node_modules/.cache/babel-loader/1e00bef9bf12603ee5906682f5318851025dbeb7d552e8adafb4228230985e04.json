{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dat\\\\Desktop\\\\house-hold-goods\\\\frontend\\\\src\\\\components\\\\contexts\\\\FavoriteContext.js\",\n  _s = $RefreshSig$();\n// FavoriteContext.js\nimport axios from 'axios';\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FavoriteContext = /*#__PURE__*/createContext();\nexport const FavoriteProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [favorites, setFavorites] = useState([]);\n\n  // Hàm để lấy danh sách yêu thích\n  const getFavorites = async () => {\n    if (user) {\n      try {\n        const favoritesProduct = await axios.get(`http://localhost:3000/favorites/${user.user_id}`);\n        setFavorites(favoritesProduct.data);\n      } catch (error) {\n        console.error(\"Error get favorites from API:\", error);\n      }\n    } else {\n      const savedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n      setFavorites(savedFavorites);\n    }\n  };\n  const syncLocalFavoritesToDB = async () => {\n    const savedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    if (savedFavorites.length > 0) {\n      try {\n        await Promise.all(savedFavorites.map(item => axios.post('http://localhost:3000/favorites', {\n          user_id: user.user_id,\n          product_id: item.product_id\n        })));\n        localStorage.removeItem('favorites'); // Xóa dữ liệu sau khi đồng bộ\n        getFavorites(); // Tải lại danh sách từ DB sau khi đồng bộ\n      } catch (error) {\n        console.error(\"Error syncing favorites to database:\", error);\n      }\n    }\n  };\n\n  // Tải danh sách yêu thích khi component mount\n  useEffect(() => {\n    getFavorites();\n    if (user) {\n      syncLocalFavoritesToDB();\n    }\n  }, [user]);\n\n  // Thêm sản phẩm vào danh sách yêu thích\n  const addToFavorites = async product_id => {\n    if (user) {\n      try {\n        await axios.post('http://localhost:3000/favorites', {\n          user_id: user.user_id,\n          product_id\n        });\n        getFavorites();\n      } catch (error) {\n        console.error(error.response ? error.response.data.message : error.message);\n      }\n    } else {\n      if (!favorites.some(item => item.product_id === product_id)) {\n        const newFavorites = [...favorites, {\n          product_id\n        }];\n        setFavorites(newFavorites);\n        localStorage.setItem('favorites', JSON.stringify(newFavorites));\n      }\n    }\n  };\n\n  // Xóa sản phẩm khỏi danh sách yêu thích\n  const removeFavorites = async product_id => {\n    if (user) {\n      try {\n        await axios.delete(`http://localhost:3000/favorites/${user.user_id}/${product_id}`);\n        getFavorites();\n      } catch (error) {\n        console.error(error.response ? error.response.data.message : error.message);\n      }\n    } else {\n      const newFavorites = favorites.filter(item => item.product_id !== product_id);\n      setFavorites(newFavorites);\n      localStorage.setItem('favorites', JSON.stringify(newFavorites));\n      console.log(localStorage.getItem('favorites'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FavoriteContext.Provider, {\n    value: {\n      favorites,\n      addToFavorites,\n      removeFavorites\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(FavoriteProvider, \"xk7RD7/NtBLCvf9l7x+5Liyi9HE=\");\n_c = FavoriteProvider;\nvar _c;\n$RefreshReg$(_c, \"FavoriteProvider\");","map":{"version":3,"names":["axios","React","createContext","useState","useEffect","useContext","AuthContext","jsxDEV","_jsxDEV","FavoriteContext","FavoriteProvider","children","_s","user","favorites","setFavorites","getFavorites","favoritesProduct","get","user_id","data","error","console","savedFavorites","JSON","parse","localStorage","getItem","syncLocalFavoritesToDB","length","Promise","all","map","item","post","product_id","removeItem","addToFavorites","response","message","some","newFavorites","setItem","stringify","removeFavorites","delete","filter","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dat/Desktop/house-hold-goods/frontend/src/components/contexts/FavoriteContext.js"],"sourcesContent":["// FavoriteContext.js\r\nimport axios from 'axios';\r\nimport React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\nexport const FavoriteContext = createContext();\r\n\r\nexport const FavoriteProvider = ({ children }) => {\r\n    \r\n    const { user } = useContext(AuthContext);\r\n    const [favorites, setFavorites] = useState([]);\r\n\r\n    // Hàm để lấy danh sách yêu thích\r\n    const getFavorites = async () => {\r\n        if (user) {\r\n            try {\r\n                const favoritesProduct = await axios.get(`http://localhost:3000/favorites/${user.user_id}`);\r\n                setFavorites(favoritesProduct.data);\r\n            } catch (error) {\r\n                console.error(\"Error get favorites from API:\", error);\r\n            }\r\n        } else {\r\n            const savedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n            setFavorites(savedFavorites);\r\n        }\r\n    };\r\n\r\n    const syncLocalFavoritesToDB = async () => {\r\n        const savedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n        if (savedFavorites.length > 0) {\r\n            try {\r\n                await Promise.all(\r\n                    savedFavorites.map(item =>\r\n                        axios.post('http://localhost:3000/favorites', {\r\n                            user_id: user.user_id,\r\n                            product_id: item.product_id\r\n                        })\r\n                    )\r\n                );\r\n                localStorage.removeItem('favorites'); // Xóa dữ liệu sau khi đồng bộ\r\n                getFavorites(); // Tải lại danh sách từ DB sau khi đồng bộ\r\n            } catch (error) {\r\n                console.error(\"Error syncing favorites to database:\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Tải danh sách yêu thích khi component mount\r\n    useEffect(() => {\r\n        getFavorites();\r\n        if (user) {\r\n            syncLocalFavoritesToDB();\r\n        }\r\n    }, [user]);\r\n\r\n    // Thêm sản phẩm vào danh sách yêu thích\r\n    const addToFavorites = async (product_id) => {\r\n        if (user) {\r\n            try {\r\n                await axios.post('http://localhost:3000/favorites', {user_id : user.user_id, product_id})\r\n                getFavorites();\r\n            } catch (error) {\r\n                console.error(error.response ? error.response.data.message : error.message);\r\n            }\r\n        } else {\r\n            if (!favorites.some(item => item.product_id === product_id)) {\r\n                const newFavorites = [...favorites, { product_id }];\r\n                setFavorites(newFavorites);\r\n                localStorage.setItem('favorites', JSON.stringify(newFavorites));\r\n            }\r\n        }\r\n    };\r\n\r\n    // Xóa sản phẩm khỏi danh sách yêu thích\r\n    const removeFavorites = async (product_id) => {\r\n        if (user) {\r\n            try {\r\n                await axios.delete(`http://localhost:3000/favorites/${user.user_id}/${product_id}`);\r\n                getFavorites();\r\n            } catch (error) {\r\n                console.error(error.response ? error.response.data.message : error.message);\r\n            }\r\n        } else {\r\n            const newFavorites = favorites.filter(item => item.product_id  !== product_id);\r\n            setFavorites(newFavorites);\r\n            localStorage.setItem('favorites', JSON.stringify(newFavorites));\r\n            console.log(localStorage.getItem('favorites'));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FavoriteContext.Provider value={{ favorites, addToFavorites, removeFavorites }}>\r\n            {children}\r\n        </FavoriteContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}