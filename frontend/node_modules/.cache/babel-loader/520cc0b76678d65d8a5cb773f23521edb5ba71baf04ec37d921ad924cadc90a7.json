{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dat\\\\Desktop\\\\house-hold-goods\\\\frontend\\\\src\\\\components\\\\contexts\\\\FavoriteContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FavoriteContext = /*#__PURE__*/createContext();\nexport const FavoriteProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [favorites, setFavorites] = useState([]);\n  const storageKey = user ? `favorites_${user.id}` : 'favorites_guest';\n\n  // Hàm tải danh sách yêu thích từ database hoặc localStorage\n  const loadFavorites = async () => {\n    if (user) {\n      try {\n        // Tải danh sách yêu thích từ server\n        const response = await axios.get(`http://localhost:3000/favorites/${user.user_id}`);\n        setFavorites(response.data);\n      } catch (error) {\n        console.error(\"Error loading favorites from database:\", error);\n      }\n    } else {\n      // Tải từ localStorage khi người dùng là guest\n      const savedFavorites = JSON.parse(localStorage.getItem(storageKey)) || [];\n      setFavorites(savedFavorites);\n    }\n  };\n\n  // Chạy lại loadFavorites mỗi khi user thay đổi hoặc storageKey thay đổi\n  useEffect(() => {\n    loadFavorites();\n  }, [user, storageKey]);\n\n  // Lưu danh sách yêu thích vào localStorage mỗi khi thay đổi nếu không có user\n  useEffect(() => {\n    if (!user) {\n      // Nếu không có user (guest), lưu vào localStorage\n      if (favorites.length > 0) {\n        localStorage.setItem(storageKey, JSON.stringify(favorites));\n      }\n    }\n  }, [favorites, user, storageKey]);\n\n  // Thêm sản phẩm vào danh sách yêu thích\n  const addToFavorites = async product_id => {\n    if (!favorites.includes(product_id)) {\n      const newFavorites = [...favorites, product_id];\n      setFavorites(newFavorites);\n      if (user) {\n        try {\n          // Gửi yêu cầu thêm vào cơ sở dữ liệu\n          const response = await axios.post('http://localhost:3000/favorites', {\n            user_id: user.user_id,\n            product_id: product_id\n          });\n          if (response.status === 201) {\n            console.log(\"Product added to favorites.\");\n          }\n        } catch (error) {\n          console.error(\"Error saving favorite to database:\", error);\n        }\n      } else {\n        // Lưu vào localStorage nếu là guest\n        localStorage.setItem(storageKey, JSON.stringify(newFavorites));\n      }\n    }\n  };\n\n  // Xóa sản phẩm khỏi danh sách yêu thích\n  const removeFromFavorites = async product_id => {\n    const newFavorites = favorites.filter(item => item !== product_id);\n    setFavorites(newFavorites);\n    if (user) {\n      try {\n        // Gửi yêu cầu xóa từ cơ sở dữ liệu\n        const response = await axios.delete(`http://localhost:3000/favorites/${user.user_id}/${product_id}`);\n        if (response.status === 200) {\n          console.log(\"Product removed from favorites.\");\n        }\n      } catch (error) {\n        console.error(\"Error removing favorite from database:\", error);\n      }\n    } else {\n      // Lưu lại danh sách đã thay đổi vào localStorage nếu là guest\n      localStorage.setItem(storageKey, JSON.stringify(newFavorites));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FavoriteContext.Provider, {\n    value: {\n      favorites,\n      addToFavorites,\n      removeFromFavorites\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(FavoriteProvider, \"3tIyz9pT/rNaI2UkbXHZBXe0gjE=\");\n_c = FavoriteProvider;\nvar _c;\n$RefreshReg$(_c, \"FavoriteProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","AuthContext","axios","jsxDEV","_jsxDEV","FavoriteContext","FavoriteProvider","children","_s","user","favorites","setFavorites","storageKey","id","loadFavorites","response","get","user_id","data","error","console","savedFavorites","JSON","parse","localStorage","getItem","length","setItem","stringify","addToFavorites","product_id","includes","newFavorites","post","status","log","removeFromFavorites","filter","item","delete","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dat/Desktop/house-hold-goods/frontend/src/components/contexts/FavoriteContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport axios from 'axios';\r\n\r\nexport const FavoriteContext = createContext();\r\n\r\nexport const FavoriteProvider = ({ children }) => {\r\n    const { user } = useContext(AuthContext);\r\n    const [favorites, setFavorites] = useState([]);\r\n\r\n    const storageKey = user ? `favorites_${user.id}` : 'favorites_guest';\r\n\r\n    // Hàm tải danh sách yêu thích từ database hoặc localStorage\r\n    const loadFavorites = async () => {\r\n        if (user) {\r\n            try {\r\n                // Tải danh sách yêu thích từ server\r\n                const response = await axios.get(`http://localhost:3000/favorites/${user.user_id}`);\r\n                setFavorites(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error loading favorites from database:\", error);\r\n            }\r\n        } else {\r\n            // Tải từ localStorage khi người dùng là guest\r\n            const savedFavorites = JSON.parse(localStorage.getItem(storageKey)) || [];\r\n            setFavorites(savedFavorites);\r\n        }\r\n    };\r\n\r\n    // Chạy lại loadFavorites mỗi khi user thay đổi hoặc storageKey thay đổi\r\n    useEffect(() => {\r\n        loadFavorites();\r\n    }, [user, storageKey]);\r\n\r\n    // Lưu danh sách yêu thích vào localStorage mỗi khi thay đổi nếu không có user\r\n    useEffect(() => {\r\n        if (!user) {\r\n            // Nếu không có user (guest), lưu vào localStorage\r\n            if (favorites.length > 0) {\r\n                localStorage.setItem(storageKey, JSON.stringify(favorites));\r\n            }\r\n        }\r\n    }, [favorites, user, storageKey]);\r\n\r\n    // Thêm sản phẩm vào danh sách yêu thích\r\n    const addToFavorites = async (product_id) => {\r\n        if (!favorites.includes(product_id)) {\r\n            const newFavorites = [...favorites, product_id]; \r\n            setFavorites(newFavorites);\r\n\r\n            if (user) {\r\n                try {\r\n                    // Gửi yêu cầu thêm vào cơ sở dữ liệu\r\n                    const response = await axios.post('http://localhost:3000/favorites', { user_id: user.user_id, product_id: product_id });\r\n                    if (response.status === 201) {\r\n                        console.log(\"Product added to favorites.\");\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error saving favorite to database:\", error);\r\n                }\r\n            } else {\r\n                // Lưu vào localStorage nếu là guest\r\n                localStorage.setItem(storageKey, JSON.stringify(newFavorites));\r\n            }\r\n        }\r\n    };\r\n\r\n    // Xóa sản phẩm khỏi danh sách yêu thích\r\n    const removeFromFavorites = async (product_id) => {\r\n        const newFavorites = favorites.filter(item => item !== product_id);\r\n        setFavorites(newFavorites);\r\n\r\n        if (user) {\r\n            try {\r\n                // Gửi yêu cầu xóa từ cơ sở dữ liệu\r\n                const response = await axios.delete(`http://localhost:3000/favorites/${user.user_id}/${product_id}`);\r\n                if (response.status === 200) {\r\n                    console.log(\"Product removed from favorites.\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error removing favorite from database:\", error);\r\n            }\r\n        } else {\r\n            // Lưu lại danh sách đã thay đổi vào localStorage nếu là guest\r\n            localStorage.setItem(storageKey, JSON.stringify(newFavorites));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FavoriteContext.Provider value={{ favorites, addToFavorites, removeFromFavorites }}>\r\n            {children}\r\n        </FavoriteContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}